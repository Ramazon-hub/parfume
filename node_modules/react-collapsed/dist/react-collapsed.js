var e=require("react"),n=require("react-dom"),t=require("raf"),o=require("tiny-warning");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=r(t),l=r(o);function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},a.apply(this,arguments)}function u(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n.indexOf(t=i[o])>=0||(r[t]=e[t]);return r}var c=function(){};function d(e){return null!=e&&e.current?e.current.scrollHeight:(l.default(!0,"useCollapse was not able to find a ref to the collapse element via `getCollapseProps`. Ensure that the element exposes its `ref` prop. If it exposes the ref prop under a different name (like `innerRef`), use the `refKey` property to change it. Example:\n\n{...getCollapseProps({refKey: 'innerRef'})}"),"auto")}var f=function(){var e=arguments;return function(){var n=arguments;return[].slice.call(e).forEach(function(e){return e&&e.apply(void 0,[].slice.call(n))})}};function s(e,n){if(null!=e)if("function"==typeof e)e(n);else try{e.current=n}catch(t){throw new Error('Cannot assign value "'+n+'" to ref "'+e+'"')}}var p="undefined"!=typeof window?e.useLayoutEffect:e.useEffect,h=!1,v=0,g=function(){return++v},y=["duration","easing","collapseStyles","expandStyles","onExpandStart","onExpandEnd","onCollapseStart","onCollapseEnd","isExpanded","defaultExpanded","hasDisabledAnimation"],E=["disabled","onClick"],x=["style","onTransitionEnd","refKey"];module.exports=function(t){var o,r,v=void 0===t?{}:t,b=v.duration,m=v.easing,C=void 0===m?"cubic-bezier(0.4, 0, 0.2, 1)":m,w=v.collapseStyles,S=void 0===w?{}:w,k=v.expandStyles,O=void 0===k?{}:k,P=v.onExpandStart,T=void 0===P?c:P,q=v.onExpandEnd,D=void 0===q?c:q,R=v.onCollapseStart,j=void 0===R?c:R,K=v.onCollapseEnd,N=void 0===K?c:K,z=v.isExpanded,A=v.defaultExpanded,H=void 0!==A&&A,I=v.hasDisabledAnimation,M=void 0!==I&&I,B=u(v,y),L=function(n,t){var o=e.useState(t||!1),r=o[0],i=o[1],a=e.useRef(null!=n),u=a.current?n:r,c=e.useCallback(function(e){a.current||i(e)},[]);return e.useEffect(function(){l.default(!(a.current&&null==n),"useCollapse is changing from controlled to uncontrolled. useCollapse should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled collapse for the lifetime of the component. Check the `isExpanded` prop."),l.default(!(!a.current&&null!=n),"useCollapse is changing from uncontrolled to controlled. useCollapse should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled collapse for the lifetime of the component. Check the `isExpanded` prop.")},[n]),[u,c]}(z,H),V=L[0],_=L[1],F=function(n){var t=h?g():null,o=e.useState(t),r=o[0],i=o[1];return p(function(){null===r&&i(g())},[]),e.useEffect(function(){!1===h&&(h=!0)},[]),null!=r?String(r):void 0}(),G=e.useRef(null);o=G,r=function(e){},"production"!==process.env.NODE_ENV&&(r=function(e){if(null!=e&&e.current){var n=window.getComputedStyle(e.current),t=n.paddingTop,o=n.paddingBottom;l.default(!(t&&"0px"!==t||o&&"0px"!==o),"react-collapsed: Padding applied to the collapse element will cause the animation to break and not perform as expected. To fix, apply equivalent padding to the direct descendent of the collapse element.")}}),e.useEffect(function(){r(o)},[o]);var J,Q,U,W=(B.collapsedHeight||0)+"px",X={display:"0px"===W?"none":"block",height:W,overflow:"hidden"},Y=e.useState(V?{}:X),Z=Y[0],$=Y[1],ee=function(e){n.flushSync(function(){$(e)})},ne=function(e){ee(function(n){return a({},n,e)})};function te(e){if(M)return{};var n=b||function(e){if(!e||"string"==typeof e)return 0;var n=e/36;return Math.round(10*(4+15*Math.pow(n,.25)+n/5))}(e);return{transition:"height "+n+"ms "+C}}J=function(){i.default(V?function(){T(),ne(a({},O,{willChange:"height",display:"block",overflow:"hidden"})),i.default(function(){var e=d(G);ne(a({},te(e),{height:e}))})}:function(){j();var e=d(G);ne(a({},S,te(e),{willChange:"height",height:e})),i.default(function(){ne({height:W,overflow:"hidden"})})})},Q=[V],U=e.useRef(!0),e.useEffect(function(){if(!U.current)return J();U.current=!1},Q);var oe=function(e){if(e.target===G.current&&"height"===e.propertyName)if(V){var n=d(G);n===Z.height?ee({}):ne({height:n}),D()}else Z.height===W&&(ee(X),N())};return{getToggleProps:function(e){var n=void 0===e?{}:e,t=n.disabled,o=void 0!==t&&t,r=n.onClick,i=void 0===r?c:r,l=u(n,E);return a({type:"button",role:"button",id:"react-collapsed-toggle-"+F,"aria-controls":"react-collapsed-panel-"+F,"aria-expanded":V,tabIndex:0,disabled:o},l,{onClick:o?c:f(i,function(){return _(function(e){return!e})})})},getCollapseProps:function(e){var n,t=void 0===e?{}:e,o=t.style,r=void 0===o?{}:o,i=t.onTransitionEnd,l=void 0===i?c:i,d=t.refKey,p=void 0===d?"ref":d,h=u(t,x);return a({id:"react-collapsed-panel-"+F,"aria-hidden":!V},h,((n={})[p]=function(){var e=[].slice.call(arguments);return e.every(function(e){return null==e})?null:function(n){e.forEach(function(e){s(e,n)})}}(G,h[p]),n.onTransitionEnd=f(oe,l),n.style=a({boxSizing:"border-box"},r,Z),n))},isExpanded:V,setExpanded:_}};
//# sourceMappingURL=react-collapsed.js.map
